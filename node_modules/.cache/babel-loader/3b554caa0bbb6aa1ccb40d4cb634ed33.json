{"ast":null,"code":"var _jsxFileName = \"/Users/pak-yong-won/Desktop/SPARCS/react_seminar/sparcs-react-seminar/template/src/App.js\";\nimport React, { Component } from 'react';\nimport { Table, Header, HeaderRow, HeaderCell, Body, Row, Cell } from '@table-library/react-table-library/table';\nimport Create from './add.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todo: [{\n        importance: 'high',\n        title: 'SPARCS',\n        task: 'homework for newbies',\n        deadline: \"today\"\n      }]\n    };\n  }\n\n  render() {\n    console.log('working!');\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Create, {\n        addPlayer: function (_importance, _title, _task, _deadline) {\n          var players = this.state.pacers;\n          console.log(players[players.length - 1].id + 1);\n          var updated = todo.concat({\n            importance: _importance,\n            title: _title,\n            task: _task,\n            deadline: _deadline\n          });\n          this.setState({\n            todo: updated\n          });\n        }.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        data: {\n          nodes: this.state\n        },\n        children: tableList => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: /*#__PURE__*/_jsxDEV(HeaderRow, {\n              children: [/*#__PURE__*/_jsxDEV(HeaderCell, {\n                children: \"Importance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(HeaderCell, {\n                children: \"Deadline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Body, {\n            children: tableList.map(item => /*#__PURE__*/_jsxDEV(Row, {\n              item: item,\n              children: [/*#__PURE__*/_jsxDEV(Cell, {\n                children: item.importance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Cell, {\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Cell, {\n                children: item.task\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Cell, {\n                children: item.deadline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 13\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/pak-yong-won/Desktop/SPARCS/react_seminar/sparcs-react-seminar/template/src/App.js"],"names":["React","Component","Table","Header","HeaderRow","HeaderCell","Body","Row","Cell","Create","App","constructor","props","state","todo","importance","title","task","deadline","render","console","log","_importance","_title","_task","_deadline","players","pacers","length","id","updated","concat","setState","bind","nodes","tableList","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Table,Header,HeaderRow,HeaderCell,Body,Row,Cell} from '@table-library/react-table-library/table';\nimport Create from './add.js';\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      todo: [{\n        importance: 'high',\n        title : 'SPARCS',\n        task: 'homework for newbies',\n        deadline: \"today\",\n      }],\n    }\n    \n  };\n\n  render() {\n    console.log('working!'); \n    return (\n      <>\n      <Create addPlayer={function (_importance, _title, _task, _deadline) {\n          var players = this.state.pacers;\n          console.log(players[players.length - 1].id+1);\n          var updated = todo.concat(\n            {importance : _importance, title: _title, task: _task, deadline: _deadline}\n          );\n          this.setState({\n            todo :updated\n          });\n        }.bind(this)}></Create>\n\n      <Table data={{nodes : this.state}}>{(tableList) => (\n        <>\n        <Header>\n          <HeaderRow>\n            <HeaderCell>Importance</HeaderCell>\n            <HeaderCell>Title</HeaderCell>\n            <HeaderCell>Task</HeaderCell>\n            <HeaderCell>Deadline</HeaderCell>\n          </HeaderRow>\n        </Header>\n        <Body>\n        {tableList.map((item) => (\n          <Row key={item.id} item={item}>\n            <Cell>{item.importance}</Cell>\n            <Cell>{item.title}</Cell>\n            <Cell>{item.task}</Cell>\n            <Cell>{item.deadline}</Cell>\n          </Row>\n        ))}\n      </Body>\n      </>\n      )}</Table><br/>\n    </>\n    );\n  }\n  \n  \n  \n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}