{"ast":null,"code":"var _jsxFileName = \"/Users/pak-yong-won/Desktop/SPARCS/react_seminar/sparcs-react-seminar/template/src/App.js\";\nimport React, { Component } from 'react';\nimport { Table, Header, HeaderRow, HeaderCell, Body, Row, Cell } from '@table-library/react-table-library/table';\nimport Create from './components/Create';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //todo: [{\n      //  importance: 'high', title : 'SPARCS', task: 'homework for newbies', deadline: \"today\",\n      //}],\n      value: \"프롭스!!\"\n    };\n  }\n\n  render() {\n    console.log('working!');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Create, {\n          value: \"Props!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Create, {\n          value: this.state.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n    /*\n    return (\n      <>\n      <Table data={{nodes : this.state.todo}}>{(tableList) => (\n        <>\n        <Header>\n          <HeaderRow>\n            <HeaderCell>Importance</HeaderCell>\n            <HeaderCell>Title</HeaderCell>\n            <HeaderCell>Task</HeaderCell>\n            <HeaderCell>Deadline</HeaderCell>\n          </HeaderRow>\n        </Header>\n        <Body>\n        {tableList.map((item) => (\n          <Row key={item.id} item={item}>\n            <Cell>{item.importance}</Cell>\n            <Cell>{item.title}</Cell>\n            <Cell>{item.task}</Cell>\n            <Cell>{item.deadline}</Cell>\n          </Row>\n        ))}\n      </Body>\n      </>\n      )}</Table><br/>\n     <Create addTodo={function (_importance, _title, _task, _deadline) {\n        var todo = this.state.todo;\n        var updated = todo.concat(\n          {importance : _importance, title: _title, task: _task, deadline: _deadline}\n        );\n        this.setState({\n          todo :updated\n        });\n      }.bind(this)}></Create>\n    </>\n    ); \n    */\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/pak-yong-won/Desktop/SPARCS/react_seminar/sparcs-react-seminar/template/src/App.js"],"names":["React","Component","Table","Header","HeaderRow","HeaderCell","Body","Row","Cell","Create","App","constructor","props","state","value","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAeC,MAAf,EAAsBC,SAAtB,EAAgCC,UAAhC,EAA2CC,IAA3C,EAAgDC,GAAhD,EAAoDC,IAApD,QAA+D,0CAA/D;AACA,OAAOC,MAAP,MAAoB,qBAApB;;;AAGA,MAAMC,GAAN,SAAkBT,SAAlB,CAA2B;AACzBU,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACA;AACA;AACAC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,wBACE;AAAA,8BACE;AAAA,+BAAG,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BAAG,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC;AAA1B;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEG;;AA1DwB;;AA8D1B;AAED,eAAeJ,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Table,Header,HeaderRow,HeaderCell,Body,Row,Cell} from '@table-library/react-table-library/table';\nimport Create from  './components/Create';\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      //todo: [{\n      //  importance: 'high', title : 'SPARCS', task: 'homework for newbies', deadline: \"today\",\n      //}],\n      value: \"프롭스!!\"\n    }\n    \n  };\n\n  render() {\n    console.log('working!'); \n    return (\n      <div>\n        <p><Create value=\"Props!!!\" /></p>\n        <p><Create value={this.state.value} /></p>\n      </div>\n    )\n    /*\n    return (\n      <>\n      <Table data={{nodes : this.state.todo}}>{(tableList) => (\n        <>\n        <Header>\n          <HeaderRow>\n            <HeaderCell>Importance</HeaderCell>\n            <HeaderCell>Title</HeaderCell>\n            <HeaderCell>Task</HeaderCell>\n            <HeaderCell>Deadline</HeaderCell>\n          </HeaderRow>\n        </Header>\n        <Body>\n        {tableList.map((item) => (\n          <Row key={item.id} item={item}>\n            <Cell>{item.importance}</Cell>\n            <Cell>{item.title}</Cell>\n            <Cell>{item.task}</Cell>\n            <Cell>{item.deadline}</Cell>\n          </Row>\n        ))}\n      </Body>\n      </>\n      )}</Table><br/>\n\n    <Create addTodo={function (_importance, _title, _task, _deadline) {\n        var todo = this.state.todo;\n        var updated = todo.concat(\n          {importance : _importance, title: _title, task: _task, deadline: _deadline}\n        );\n        this.setState({\n          todo :updated\n        });\n      }.bind(this)}></Create>\n    </>\n    ); \n    */\n  }\n  \n  \n  \n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}